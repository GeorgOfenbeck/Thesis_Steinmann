## The generated java classes have a getter and a setter for each normal field. 
## A list only has a setter. The JavaType is used both for the backing field,
## the getter and the setter.
##
## A list always has a new list instance as default value.
##
package $class.javaPackage;

import java.util.LinkedList;
import java.util.List;
import java.math.BigInteger;

/** $class.comment */
@SuppressWarnings("unused")
public #if ($class.isGeneratedJavaClassAbstract()) abstract #end class ${class.javaName} #if ($class.hasJavaBaseType()) extends $class.javaBaseType #end {

## iterate over all fields of the class
#foreach($field in $class.fields)
	#if ($field.hasJavaDefault())
		private $field.javaType $field.name
			=$field.javaDefault;
	#else
		private $field.javaType $field.name;
	#end
	
	#if ($field.class.simpleName == "MultiLanguageField")		
		## the setter is present only for normal fields
		## a list needs no setter
		/** $field.comment */	
		public void set${field.nameUpperCamel}($field.getJavaType() value){
			${field.name} = value;
		}
	#end
 	
 	## the getter can be used for lists and normal fields
	/** $field.comment */
	public $field.getJavaType() get${field.nameUpperCamel}(){
		return $field.name;
	}
#end
}