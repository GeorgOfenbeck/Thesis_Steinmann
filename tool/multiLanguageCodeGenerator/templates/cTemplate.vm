#ifndef ${class.name}_H
\#define ${class.name}_H
\#include "MultiLanguageIncludes.h"
\#include <vector>
\#include <string>

#foreach ($reference in $references)
\#include "${reference}.h"
#end

/** $class.comment */
class $class.name #if ($class.hascBaseType()) : public $class.cBaseType #end{
	public:
	MultiLanguageTypeEnum getType(){return MULTI_LANGUAGE_TYPE_ENUM_$class.name;}
#foreach($field in $class.fields)
	private: 
	
	$field.getcType() $field.name;
	
	public:
	
	## for lists, there is no setter, but the getter returns a reference to the vector
	#if ($field.class.simpleName == "MultiLanguageList")
		/** $field.comment */
		$field.getcType() &get${field.nameUpperCamel}(){
			return $field.name;
		}
	#else
		## create getter and setter for a normal field
		/** $field.comment */
		$field.getcType() get${field.nameUpperCamel}(){
			return $field.name;
		}
		#if ($field.class.simpleName!="MultiLanguageDefine")
			/** $field.comment */	
			void set${field.nameUpperCamel}($field.getcType() value){
				${field.name} = value;
			}
		#end
	#end 
#end
};
#endif